# Configuration for external service handler to access third party services through proxy/gateway.
# Indicate if the handler is enabled or not
enabled: ${externalService.enabled:false}
# Proxy Host if calling within the corp network with a gateway like Mcafee gateway.
proxyHost: ${externalService.proxyHost:}
# Proxy Port if proxy host is used. default value will be 443 which means HTTPS.
proxyPort: ${externalService.proxyPort:}
# If HTTP2 is used to connect to the external service.
enableHttp2: ${externalService.enableHttp2:false}
# A list of request path to the service host mappings. Other requests will skip this handler. The value is
# a string with two parts. The first part is the path and the second is the target host the request is
# finally routed to.
pathHostMappings: ${externalService.pathHostMappings:}
# URL rewrite rules, each line will have two parts: the regex patten and replace string separated
# with a space. For details, please refer to the light-router router.yml configuration.
# Test your rules at https://www.freeformatter.com/java-regex-tester.html
urlRewriteRules: ${externalService.urlRewriteRules:}
# For some external service providers, they do not send the certificate, use expired certificate and self-signed
# certificate, we need to bypass the certificate for those endpoints to use a customized trust all SSLContext.
# This is not recommended for production; however, it can be used as a workaround if security team approves it.
# The path prefixes listed below will use a customized trust all SSLContext for external access.
trustAllCertsPathPrefixes: ${externalService.trustAllCertsPathPrefixes:}
